// Generated by EmberScript 0.0.14
var set$ = Ember.set;
var get$ = Ember.get;
set$(Enterprise, 'ApplicationController', Ember.ArrayController.extend({
  savedTransition: null,
  login: function () {
    var fields, session, userData, userId;
    userData = {};
    session = localStorage.getItem('xiaoxiao:session');
    userId = localStorage.getItem('xiaoxiao:currentUserID');
    fields = [
      'organizationInfo.id',
      'organizationInfo.name',
      'organizationInfo.parent',
      'organizationInfo.email',
      'organizationInfo.contact',
      'organizationInfo.description',
      'extendedOrganizationInfo.type',
      'extendedOrganizationInfo.credit',
      'dynamic.numberOfMembers',
      'dynamic.numberOfFollowers',
      'dynamic.numberOfEvents',
      'dynamic.roleType'
    ];
    return Ember.$.ajax({
      url: '/api/user/' + userId + '/info?session=' + session + '&fields=' + fields.join(','),
      dataType: 'json'
    }).then(function (this$) {
      return function (data) {
        if (get$(data, 'status') === 'OK') {
          set$(userData, 'dynamic', userData);
          return Ember.$.ajax({
            url: '/api/account/list_administrated_organizations?session=' + session,
            dataType: 'json'
          }).then(function (this$1) {
            return function (data) {
              var organizations, orgData, orgSerializer, orgsId, user, userSerializer;
              userSerializer = this$1.get('store').serializerFor('user');
              orgsId = get$(data, 'organizations').mapProperty('id');
              userData = userSerializer.extract(this$1.get('store'), get$(Enterprise, 'User'), {
                user: {
                  id: userId,
                  session: session,
                  orgs: orgsId
                }
              }, userId, 'find');
              user = this$1.get('store').push('user', userData);
              orgSerializer = this$1.get('store').serializerFor('org');
              organizations = get$(data, 'organizations').map(function (json) {
                set$(json, 'user', userId);
                return json;
              });
              orgData = orgSerializer.extractArray(this$1.get('store'), get$(Enterprise, 'Org'), organizations);
              this$1.get('store').pushMany('org', orgData);
              get$(Enterprise, 'Auth').set('user', user);
              return this$1.set('savedTransition', null);
            };
          }(this$));
        }
      };
    }(this));
  },
  logout: function () {
    localStorage.setItem('xiaoxiao:currentUserID', null);
    localStorage.setItem('xiaoxiao:session', null);
    return get$(Enterprise, 'Auth').set('user', null);
  }
}));